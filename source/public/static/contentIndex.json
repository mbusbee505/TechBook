{"Intune-Lab/0.-Project-Introduction":{"title":"0. Project Introduction","links":[],"tags":[],"content":"About The Project\nThe idea for this project was to give myself more hands on experience using Intune, Autopilot, EntraID, and other associated technologies in the Microsoft Azure ecosystem. I enjoy creating standardized setups that simplify IT operations. They can reduce new employee onboarding workload by outsourcing the heavy lifting to Intune and let it manage automatically setting up each employee as specified by their group status.\nI want this to be as close to a real life simulation as possible so I had ChatGPT generate some simulation user data in the form of an uploadable CSV file. My Microsoft Entra trial limited me to 25 users so I had it generate 24 users (not including myself). Each user has randomized information and was assigned to a department so I can have different groups apply to each department. Entra can use dynamic rules to assign users to groups based on their user information.\nI created a GitHub repo for this project to share files such as my user CSV, config files and other artifacts I generate in the lab. The link to the repo can be found here. Feel free to use what I have here in your own lab setup. If it helps you get up and running faster I’ve done my job.\nLab Outline\n\nSet up Intune and Entra environment\n\nSign up for free trials\nUpload users to Entra\nCreate groups in Entra\nAssigning licenses to users\n\n\nEnroll Devices to Intune\n\nGather hardware hash of devices\nCreate deployment profile\nConfigure Enrollment Status Page\nConfirm OOBE Proof-of-concept\n\n\nImprove OOBE Experience\n\nRemove question prompts to user\n\n\nInstall apps\n\nGoogle Chrome\nZoom\nMicrosoft Office\nGlobalProtect VPN\n\n\nConfigure Update Rings\n\nPilot Group\nBroad User Group\n\n\nImprove Security Posture\n\nInstall Security Baselines\nConnect Defender for Endpoint\n\n\n\nHelpful Links\nAdmin Portals\n\nMicrosoft Intune\nMicrosoft Entra\nMicrosoft Defender\n\nLab Resources\n\nmbusbee505/IntuneLab\nUsers CSV\n\nMicrosoft Free Trials\n\nMicrosoft Intune Free Trial\nMicrosoft Entra Free Trial\nMicrosoft Defender for Endpoint P2 Free Trial\n"},"Intune-Lab/1.-Setting-Up-The-Lab":{"title":"1. Setting Up The Lab","links":[],"tags":[],"content":"Signing Up for Intune\nFirst things first, I had to sign up for the Intune Free Trial, provided an email address and a few other pieces of info.\nThe trial allows for 25 users but we get all the same features as the paid version of the environment.\n\nNuke The Security Defaults\nNext up I needed to turn off the Entra security defaults so theres room for my conditional access policies to take effect without conflict. To do this I went to Entra &gt; Overview &gt; Properties &gt; Manage security defaults and set it to Disabled (not recommended).\n\nWhen asked for the reason, I selected “My organization plans to use Conditional Access”.\nSigning Up for Entra ID\nYou will need to use this page to sign up for Entra ID and use the same Microsoft account as you used for the Intune trial. Once this is complete you will be able to use Entra in your environment.\nBefore you begin you may need to assign a license to your user. If this happens go to Microsoft 365 Admin Center &gt; Billing &gt; Licenses and ensure there is a license assigned to your user. If not, assign one manually from this page by clicking Microsoft Entra Suite &gt; Users &gt; Assign Licenses and choose yourself.\nNext we will move on to adding more users for our organization and ensure they have licenses.\nUploading Corporate Workforce\nEvery good organization needs at least a few users, so to make things seem more real I’m going to upload to Entra a CSV file of simulated User data that makes up my fake company workforce.\nTo get to the user upload I went to Entra &gt; Users &gt; Bulk Operations &gt; Bulk Create and selected my file in the search field.\n\nIf you need a fresh template for new users you can download one provided by Microsoft here as well.\nTo see that it worked I refreshed the page and went to the All Users section.\n\nSetting Up Security Groups\nWith Microsoft Azure you can do most things through the web portal online or using PowerShell. When you want to solve problems at scale or do something in an automated way its sometimes better to use PowerShell. I wanted a way to automate the group creation in this way so I tried with a PowerShell command.\nFirst make sure you have Microsoft Graph installed.\nInstall-Module Microsoft.Graph -Scope CurrentUser\n\nThen connect to your tenant:\nConnect-MgGraph -Scopes &quot;Group.ReadWrite.All&quot; -TenantID &quot;&lt;Your Tenant ID&gt;&quot;\n\nThe Tenant ID can be found by going to Entra &gt; Overview\n\nAfter running this command for the first time like I was, you may have a pop-up browser window asking for permission to connect. Make sure to give it the access so you can continue running commands.\nTo test that the connection works run\nGet-MgContext\n\nIt should output some info about your Tenant like below. If this doesn’t work you will need to check your connect command again and ensure you are using the right Tenant ID.\n\nOnce I confirmed connection I ran the command below which added the following security groups to Entra. Since its a dynamic group, users and devices will be added to them automatically based on their properties.\n\nExec\nHR\nFinance\nIT\nSales\nMarketing\nEng\nSupport\nAll-Devices\nAll-iOS\nAll-Android\n\n# Map each DisplayName to its dynamic rule\n$dynamicMap = @{\n    &#039;Executive&#039;     = &#039;(user.jobTitle -contains &quot;Chief&quot;)&#039;\n    &#039;Human Resources&#039;       = &#039;(user.department -eq &quot;Human Resources&quot;)&#039;\n    &#039;Finance&#039;  = &#039;(user.department -eq &quot;Finance&quot;)&#039;\n    &#039;IT&#039;       = &#039;(user.department -eq &quot;IT&quot;)&#039;\n    &#039;Security&#039;       = &#039;(user.department -eq &quot;Security&quot;)&#039;\n    &#039;Research&#039;       = &#039;(user.department -eq &quot;Research&quot;)&#039;\n    &#039;Sales&#039;    = &#039;(user.department -eq &quot;Sales&quot;)&#039;\n    &#039;Marketing&#039;= &#039;(user.department -eq &quot;Marketing&quot;)&#039;\n    &#039;Engineering&#039;      = &#039;(user.department -eq &quot;Engineering&quot;)&#039;\n    &#039;Support&#039;  = &#039;(user.department -eq &quot;Support&quot;)&#039;\n    &#039;All-Devices&#039; = &#039;(device.deviceId -ne null)&#039;      # dynamic **device** group\n    &#039;All-iOS&#039;     = &#039;(device.deviceOSType -contains &quot;iOS&quot;)&#039;\n    &#039;All-Android&#039; = &#039;(device.deviceOSType -contains &quot;Android&quot;)&#039;\n}\n\nforeach ($kv in $dynamicMap.GetEnumerator()) {\n    $name = $kv.Key\n    $rule = $kv.Value\n\n    $params = @{\n        DisplayName                 =  $name\n        MailNickname                = ($name -replace &#039;\\s&#039;,&#039;&#039;)\n        Description                 = &quot;$name dynamic security group&quot;\n        SecurityEnabled             = $true          # keeps it a security group\n        MailEnabled                 = $false\n        GroupTypes                  = @(&#039;DynamicMembership&#039;)\n        MembershipRule              = $rule\n        MembershipRuleProcessingState = &#039;On&#039;\n    }\n\n    New-MgGroup @params\n}\n\n\nOnce I saw the success screen come through I went to Entra &gt; Groups &gt; All Groups and found the groups added via PowerShell.\n\nAccording to Microsoft, it can take up to 24 hours for these groups to apply to users. While I waited for this to end I moved on to setting up a dynamic device group for Windows 11 devices.\n\nIn the Add dynamic query page I added the following settings:\n\nAssigning Entra+Intune Licenses\nI discovered in order to get the Automatic Enrollment to work on Intune during the OOBE setup I needed each user to have an Entra and Intune license assigned. Since I had only signed up for the Intune Trial so far, I had to go back and make sure to sign up for an Entra ID Free Trial as well under the same Microsoft account.\nThe Free Trials for Entra and Intune both came with 25 users each so I decided to cull my workforce down to 25 users (including myself), then apply the licenses to each user. I did not want to apply to all users, just those that are employees of the company. The smartest way to do this seemed to be by creating a dynamic group based on the user’s Company Name property and assign licenses to members of that group.\nFirst I needed to set the Company Name property correctly for all 25 of my current users, since I know these are all employees. The following PowerShell commands set the Company Name for all users.\n$CompanyName = &quot;BusbeeCorp&quot;\n$domain      = &quot;@busbeecorp.onmicrosoft.com&quot;\n\nGet-MgUser `\n    -Filter &quot;endswith(userPrincipalName,&#039;$domain&#039;)&quot; `\n    -ConsistencyLevel eventual `\n    -All |                             \nForEach-Object {\n    Update-MgUser -UserId $_.Id -CompanyName $CompanyName\n}\n\n\nIn the real world I would want to make sure data entry for each new user is happening correctly.\n\nWith the Company Name set I just needed to create a dynamic group for All-Employees based on the Company Name property BusbeeCorp\n$rule = &#039;user.companyName -eq &quot;BusbeeCorp&quot;&#039;\n\nNew-MgGroup -DisplayName &quot;All-Employees&quot; `\n            -Description &quot;Every Employee of BusbeeCorp&quot; `\n            -MailEnabled:$false `\n            -SecurityEnabled:$true `\n            -MailNickname &quot;all-employees&quot; `\n            -GroupTypes &quot;DynamicMembership&quot; `\n            -MembershipRule $rule `\n            -MembershipRuleProcessingState &quot;On&quot;\n\nI found that to get the Licenses assigned to the All-Employees group I had to first update Microsoft Graph to get a few modules not included by default.The following command will install this and open a new PowerShell session.\nRegister-PSRepository -Name PSGallery -SourceLocation &quot;www.powershellgallery.com/api/v2&quot; -InstallationPolicy Trusted -ErrorAction SilentlyContinue\n\nInstall-Module Microsoft.Graph -Scope CurrentUser -Force\npwsh \n\nOnce in the new session I ran the commands below to apply the License SKUs to the All-Employees group.\nConnect-MgGraph -Scopes &quot;Directory.ReadWrite.All&quot;,&quot;LicenseAssignment.ReadWrite.All&quot;,&quot;Group.ReadWrite.All&quot;\n\n$skuIntune  = &quot;061f9ace-7d42-4136-88ac-31dc755f143f&quot;\n$skuEntraP2 = &quot;f9602137-2203-447b-9fff-41b36e08ce5d&quot;\n$groupId    = (Get-MgGroup -Filter &quot;displayName eq &#039;All-Employees&#039;&quot;).Id\n\nSet-MgGroupLicense -GroupId $groupId `\n    -AddLicenses  @(@{SkuId=$skuIntune}, @{SkuId=$skuEntraP2}) `\n    -RemoveLicenses @()\n\nI confirmed this took effect by going to Entra &gt; Billing &gt; Licenses &gt; All Products and saw 25 Assigned licenses for each product.\n\nSigning Up for Defender for Endpoint\nFirst, Go to the sign up page for Microsoft Defender for Endpoint P2 Free Trial and sign up using the same login you used for the rest of the lab. Complete the sign up flow, then go to Microsoft 365 Admin Center &gt; Billing &gt; Licenses page and click Microsoft Defender for Endpoint P2. In this page click Groups &gt; Assign Licenses and assign them to the All-Employees group.\nNext we can setup Defender for Endpoint to connect with each of our devices in Intune so we can get visibility over the devices security and compliance status. Defender for Endpoint provides comprehensive protection for endpoint devices to guard users and provide better management capabilities for IT admins.\nTo configure Defender for Endpoint you must first connect it to the Intune environment. In Intune go to Intune &gt; Endpoint security &gt; Microsoft Defender for Endpoint and set the following setting:\n\nAllow Microsoft Defender for Endpoint to enforce Endpoint Security Configurations: On\n\nThis will let Defender control the configurations within the Intune environment.\nYou will next need to go to the Defender portal and connect Defender to Intune on the other side. Go to Defender &gt; Settings &gt; Endpoint &gt; Advanced Features &gt; Microsoft Intune Connection and set it to On.\nSigning Up for Vulnerability Management\nNext, go to Defender &gt; Trials &gt; Defender Vulnerability Management &gt; Begin trial so you have access to the portal.\n\nMicrosoft warns it can take some time to set up the Defender environment after signing up for the trial so I recommend hitting the button as soon as possible when you start your lab.\nOnce your trial has processed you should be able to see your licenses in the Microsoft 365 Admin Center &gt; Billing &gt; Licenses page and click Microsoft Defender Vulnerability Management. In this page click Groups &gt; Assign Licenses and assign them to the All-Employees group."},"Intune-Lab/2.-Enrolling-Devices":{"title":"2. Enrolling Devices","links":[],"tags":[],"content":"Getting the Hardware Hash\nIn a real world scenario hardware hashes for each device would be provided to the organization by the device manufacturer, but since I can’t do that I had to fake it a bit.\nI created a new Windows 11 VM and when it got to the select region screen I pressed Shift+F10 to open command prompt then ran the command powershell to get to open a new PowerShell session.\nThe commands below do the following things:\n\nInstalls Microsoft Graph\nConnects to Microsoft Graph using the TenantID provided\nSets Execution Policy to Bypass\nInstalls Windows Autopilot Info module\nGenerates the device hardware hash and uploads it to the tenant\n\nSet-ExecutionPolicy -Scope Process Bypass -Force\nInstall-Module Microsoft.Graph -Scope CurrentUser\nConnect-MgGraph -Scopes &quot;Group.ReadWrite.All&quot; -TenantID &quot;&lt;Your Tenant ID&gt;&quot;\nInstall-Script -Name Get-WindowsAutopilotInfo -Force\nGet-WindowsAutopilotInfo -Online\n\n\nTo confirm this was successful you can go to Intune &gt; Devices &gt; Enrollment &gt; Windows Autopilot &gt; Devices\n\nHere I can see my VM running on VMware “hardware”. With this in place I’m ready to move on.\nCreating Autopilot Device Group\nI created a Dynamic Security group called All-Registered-Autopilot that will grab all devices registered to Autopilot. This will be the group I assign the Deployment Profile and Enrollment Status Page to.\nIntune &gt; Groups &gt; New Group\n\nName: All-Registered-Autopilot\nDescription: All Devices registered to Autopilot\nMembership Type: Dynamic Device\n\nEdit Dynamic Query &gt; Configuration Rules\n(device.devicePhysicalIds -any (_ -startsWith &quot;[ZTDId]&quot;))\n\nCreating The Deployment Profile\nMy goal is to get a Windows 11 device to the point it could be purchased from the manufacturer, sent to a new employee, then the employee can use their corporate login credentials to sign in and set up the laptop. The configuration should take care of all setup and installs and leave as little as possible to the user.\nI went to Intune &gt; Devices &gt; Enrollment &gt; Windows &gt; Deployment Profiles &gt; Create Profile\nI gave the following settings to create the profile:\n\nName: Employee New Device\nDescription: Windows 11 Employee Config\nDeployment Mode: User-Driven\nJoint to Microsoft Entra ID as: Microsoft Entra Joined\nApply a device name template: Yes - %SERIAL%-W\nAdd Groups: All-Registered-Autopilot\n\nSummary of the Out-of-box experience (OOBE) settings\n\nCreating an Enrollment Status Page (ESP)\nNext I needed to create an Enrollment Status Page to prevent the user from affecting the device setup and also provide them visibility into the setup status.\nTo access the ESP settings I went to Intune &gt; Devices &gt; Enrollment &gt; Windows &gt; Enrollment Status Page &gt; Create\nI gave it a name to match the Configuration Profile and set Show app and profile configuration progress to Yes and left all other settings as default on this page. I also assigned it to apply to the All-Windows-11 group.\nSummary of ESP Settings below:\n\nThe following settings are important here to make sure apps we install during setup finish before the computer is released to the user:\n\nBlock device use until all apps and profiles are installed: Yes\nBlock device use until required apps are installed if they are assigned to the user/device: All\n\nTesting Out-of-box experience (OOBE)\nWith the command prompt still open on the Windows VM, I ran the command below to shutdown the device and set it back to OOBE mode.\n%SystemRoot%\\System32\\Sysprep\\Sysprep.exe /oobe /shutdown\n\nOnce it turned back on I noticed the setup was different. It was now asking for a Microsoft Work/School account immediately. I chose one of the accounts from my organization at random and used their email address and password to login.\nI noticed there were a few things I did not like about the OOBE setup. It asked the user to change their password as soon as they logged in. This may have been due to this being the first time they have ever logged in, or it could be set by Autopilot. I will need to look into this.\nI also noticed it pushed the user into setting up a Windows Hello pin and then used that for login. I would instead prefer the user to have to use a domain user and password for login.\nLastly, I noticed it asked if the user wanted Microsoft 365 Copilot added to taskbar. I do not want my users to have this, or the question asking about it so I want to look into how to remove it."},"Intune-Lab/3.-Polishing-OOBE":{"title":"3. Polishing OOBE","links":[],"tags":[],"content":"Removing Windows Hello\nWhen I ran my first OOBE test my user was prompted with the requirement to setup Windows Hello. I want to turn this off entirely so I found going to Intune &gt; Devices &gt; Enrollment &gt; Windows Hello for Business and set Configure Windows Hello for Business to Disabled and clicked Save.\nRemoving 365 Copilot Pin Prompt\nAnother thing I noticed on the last OOBE test was a prompt asking the user to pin Microsoft 365 Copilot to their taskbar. I do not want users to have to worry about this so I looked into how to disable it in the portal.\nTurns out you can go to Microsoft 365 &gt; Copilot &gt; Settings &gt; User Access and set Pin Microsoft 365 Copilot App to the Windows Taskbar setting to Do Not Pin and click save.\n\nWhile I was in here I also went through and disabled Copilot across most of the tenant settings.\nTesting Setup\nNow comes the time to reboot/startup the VM and see if the changes too effect. I started it up and instead of the initial questions where setup asks me to choose a region and language, it instead immediately asked me to sign in with a Microsoft account. Here this should let my user log in with their corporate account that was made for them.\n\nAfter logging in I got a screen that says “Please wait while we set up your device…”\n\nOnce set up completed it logged me into my account and showed me the desktop. I was not prompted with any Windows Hello or 365 Copilot questions.\n\nI checked settings and it shows I’m logged in with my corporate account and the name scheme took effect labeling the device as [Serial Number]-W. It looks like the initial run was successful. Next I want to test installing apps on the device.\n"},"Intune-Lab/4.-Installing-Apps":{"title":"4. Installing Apps","links":["Intune-Lab/2.-Enrolling-Devices"],"tags":[],"content":"Installation Methods\nI wanted to test a few commonly used apps that also showcase the different methods of installing apps with Intune. I decided on the following:\n\nLine-of-business (LOB) - Zoom Workplace\nWin32 App - Google Chrome\nMicrosoft Store app - GlobalProtect VPN\nMicrosoft 365 Apps for Windows 11\n\nI will also need to make sure my Enrollment Status Page settings block the user from accessing the device until the installations are complete.\nLine-of-business (LOB) - Zoom Workplace\nTo create a LOB app you basically just need to find the .msi version of the app’s installer and load it into Intune. Just go to Intune &gt; Apps &gt; All apps &gt; Create &gt; App type &gt; Line-of-business app.\n\nNext it will ask to upload the file you can select it from your computer locally after downloading it from the internet or wherever else.\n\nIn my case I went to Zoom’s Downloads for IT Admins, selected the Download (ARM64), and downloaded it to my computer. I then went back to Intune and selected this file for the upload.\n\n\nKeep in mind I only chose ARM due to the VM used for testing. In another environment you would want to consider the architecture and OS requirements for your app/device compatibility.\n\nLuckily for me the Intune LOB App Wizard pre-populated a lot of the information to set up the app including the Name and Description. It labeled it as (ARM64) so if I needed to also provision the AMD64 version it would be easy to tell them apart.\nFor the Command-line arguments section I added the following:\n/qn /norestart\n\nThis will prevent the device from restarting after the Zoom install is complete.\nI also needed to set the App install context to Device so that it automatically installs it during OOBE setup. If you keep it as the default User it will only install it after the user logs in, and it is only available for that user on the machine. I found it made more sense to keep it device-wide.\nOn the Assignments page I chose the All-Windows-11 group to receive this install. This is where I could consider separating app availability by group membership but for now I will allow it on all Windows 11 devices.\n\nWin32 App - Google Chrome\nIf the app developer does not provide an MSI version of the installer and you are forced to use an EXE or some form of script, you can wrap it in a Win32 App to make it usable within Intune. This can be done by using Microsoft’s Content-Prep-Tool which is a Windows only tool for creating Win32 Apps.\nSince I had to use Windows, I downloaded the tool on my Windows machine, calling the file “Win32Prep” and created the following file structure:\nC:/\n├─ Source/\n│  ├─ Chrome/\n│  │  ├─ ChromeSetup.exe\n├─ Tools/\n│  ├─ Win32Prep/\n│  │  ├─ IntuneWinAppUtil.exe\n├─ Output/\n\nI then used the following command in a Windows machine to turn the Google Chrome:\nC:\\Tools\\Win32Prep\\IntuneWinAppUtil.exe `\n  -c &quot;C:\\Source\\Chrome&quot; `\n  -s &quot;ChromeSetup.exe&quot; `\n  -o &quot;C:\\Output&quot;\n\nOnce this process completes you should see a ChromeSetup.intunewin file in the Win32Oput folder. Next is uploading this to Intune and creating an App for it.\nBack in Intune I went to Intune &gt; Apps &gt; All Apps &gt; Create &gt; App Type &gt; Windows app (Win32) and when it asked for the file I gave it the .intunewin I just made. I gave it the name Google Chrome (ARM64) to be consistent with the Zoom App.\nI then entered the following settings:\n\nInstall command: ChromeSetup.exe /silent /install\nUninstall command: &quot;%ProgramFiles%\\Google\\Chrome\\Application\\chrome.exe&quot; --uninstall --system-level --force-uninstall\nAllow available uninstall: No\nInstall Behavior: System\nDevice restart behavior: No specific action\n\nThis will make sure Chrome installs for all users, the users are not allowed to uninstall the app, and the app will not restart the device after installation.\nOn the Requirements page I selected the following:\n\nCheck operating system architecture: Yes - Install on ARM64 system\nMinimum operating system: Windows 11 21H2\n\nThis ensures this app can only install on ARM64 devices with any version of Windows 11. Since this is a fairly small app install I did not make any hardware requirements.\nDetection Rule settings:\n\nRule type: File\nPath: C:\\Program Files\\Google\\Chrome\\\nFile or folder: chrome.exe\nDetection Method: File or folder exists\n\nFor Assignments I selected this app be required for the All-Windows-11 group to be available for all Windows-11 users.\nWith all of that in place I hit Create and let Intune build the app for me and everything seemed good to go.\nMicrosoft Store app - GlobalProtect VPN\nTo create a Microsoft Store app you just need to go to Intune &gt; Apps &gt; All Apps &gt; Create &gt; App type &gt; Microsoft Store app (new) and searched for “GlobalProtect” in the search bar.\n\nWhen I selected this it auto-populated most of the information for me in the App Information settings. I did however change the Install behavior to system to ensure this would apply to all users on the device.\nOn the next page I assigned this to be required for the All-Windows-11 group then hit Create to let Intune build this for me.\nMicrosoft 365 Apps for Windows 11\nMicrosoft Office 365 Apps are another install that will often be requested in corporate enterprise environments. Microsoft makes it easy to install this by offering the Office 365 installer as a built in option in the Intune Apps Create menu. Just go to Intune &gt; Apps &gt; All Apps &gt; Create &gt; App Type &gt; Microsoft 365 Apps &gt; Windows 10 and later to start the creation wizard.\nFor the App Setup Information I kept the defaults, feel free to tweak as needed. On the Configure App Suite page I made the following changes:\n\nSelect Office Apps:\n\nExcel\nOutlook\nPowerPoint\nTeams\nWord\n\n\nArchitecture: 64-bit\nDefault file format: Office Open XML Format\nUpdate Channel: Monthly Enterprise\nRemove Other Versions: Yes\nUse shared computer activation: Yes\n\nOn the assignments page I set the install to run for all devices in the All-Windows-11 group and clicked Create so Intune could start building the app.\nTesting\nAfter all the apps were set up in the portal I restarted my VM OOBE snapshot to start fresh. I let it run for a few minutes and saw the Enrollment Status Page say Installed Apps: 4 out of 4. I was then taken to the device desktop where I confirmed all apps installed.\n\nYou can also confirm the apps were installed from the Intune portal by going to  Intune &gt; Devices &gt; Windows &gt; [Device Name] &gt; Managed Apps.\n\nBonus: VMware Tools (Win32 App)\nI decided it would be easier on me if I could have my test devices automatically install VMware Tools. Since the installer only comes in the form of an EXE I had to do it as a Win32 App.\nFirst I needed to get the EXE file and create the wrapper file. I found the file setup.exe by finding the ARM version of the windows.iso and mounting it to my system and looking inside. The method of doing this will be different depending on your version of VMware and the OS of your hypervisor host.\nOnce you have the EXE you can perform a similar step as above with Chrome:\nC:\\Tools\\Win32Prep\\IntuneWinAppUtil.exe `\n  -c &quot;C:\\Source\\VMwareTools&quot; `\n  -s &quot;setup.exe&quot; `\n  -o &quot;C:\\Output&quot;\n\nThis created a file called setup.intunewin which I could then upload to Intune.\nBefore I did that I needed to create a new dynamic group that only applies to VMware VMs. I created one in Entra using the following dynamic rule and called it All-VMware\n(device.deviceModel -contains &quot;VMware&quot;) \n     or (device.deviceManufacturer -contains &quot;VMware&quot;)\n\nFor the Win32 App I used the following settings:\n\nName: VMwareTools (ARM64)\nDescription: VMwareTools (ARM64)\nPublisher: VMware\nInstall Command: setup.exe /S /v “/qn REBOOT=R ADDLOCAL=ALL”\nUninstall Command: setup.exe /S /v “/qn REMOVE=ALL REBOOT=R”\nAllow available uninstall: No\nInstall Behavior: System\nDevice restart behavior: App install may force a device restart\nMinimum Operation System: Windows 11 21H2\nDetection Rule:\n\nRule Type: File\nPath: C:\\Program Files\\VMware\\VMware Tools\\\nFile or folder: vmtoolsd.exe\nDetection method: File or folder exists\nAssociated with a 32-bit app on 64-bit clients: Yes\n\n\nAssignment: All-VMware\n"},"Intune-Lab/5.-Creating-Update-Rings":{"title":"5. Creating Update Rings","links":[],"tags":[],"content":"What is an Update Ring?\nAn Update Ring is a policy setting within Intune that controls how and when the connected devices are able to run Windows updates. You can set different options like number of deferral days, update deadlines, reboot behavior, etc. You can develop different Update Rings and apply each to a different device group in what ever configuration makes the most sense for your environment. Its also important to know that Update Ring only affects Windows OS and Microsoft First Party updates which means custom LOB/Win32 apps will need to be kept up-to-date separately.\nWait, I need another one?\nFor most organizations it makes sense to make at least two Update Rings, one to pilot more risky changes and updates, and a broader ring that controls updates on all devices. The broad ring is a slower, less update ring that you can trust in production across all devices. You will want to fill the pilot ring with more tech-savvy users and those who are less impactful on production if they shutdown unexpectedly. There is a wide range of issues that can be caused by a bad update, from bad drivers, broken network connections, other bugs etc. Having a pilot group protects the rest of the organization from experiencing these disruptions. I decided for my environment I would make all members of the IT team the pilot group and everyone else is in the broad group.\nThe Update of The Rings\nTo create the update rings you need to go to Intune &gt; Devices &gt; Windows &gt; Windows Updates &gt; Update Rings &gt; Create Profile\nPilot Ring\nThe following settings will create an update ring that allows pilot users to defer feature updates for 7 days but does not let them defer quality updates. It also creates a 7 day deadline with a 2 day grace period. The ring is set to only affect IT users.\n\nName: Pilot Update Ring\nDescription: Pilot Update Ring\nQuality update deferral period (days): 0\nFeature update deferral period (days): 7\nAutomatic update behavior: Auto install &amp; restart at maintenance time\nUse deadline settings: Allow\nDeadline for feature updates: 7\nDeadline for quality updates: 7\nGrace period: 2\nIncluded Groups: IT\n\nBroad Ring\nThe following settings will create an update ring for the remaining users in the tenant. They are allowed to defer feature updates for 30 days and quality updates for 7 days. This setup also gives them a 14 day deadline with a 3 day grace period. This will apply to all users that are not in the IT department.\n\nName: Broad Update Ring\nDescription: Broad Update Ring\nQuality update deferral period (days): 7\nFeature update deferral period (days): 30\nAutomatic update behavior: Auto install &amp; restart at maintenance time\nUse deadline settings: Allow\nDeadline for feature updates: 14\nDeadline for quality updates: 14\nGrace period: 3\nIncluded Groups: All-Employees\nExcluded Groups: IT\n\nWhen all is said and done you should have something that looks like this.\n\n\n\nThis one is a little tougher to test since we would have to wait for Microsoft to issue a new update for Windows so we could see how it hit user devices differently. For now however, let’s just trust that it’s working properly."},"Intune-Lab/6.-Securing-Devices":{"title":"6. Securing Devices","links":[],"tags":[],"content":"Introduction to Security\nOne benefit of managing devices with Intune is that it gives you control of security features across the devices it manages and allows IT admins the ability to fine-tune their environments to meet their security and compliance needs. There are several methods available such as security baselines, defender for endpoint, compliance policies, conditional access, etc. that can be used to our benefit.\nEvery organization will have different concerns when it comes to data governance, risk, compliance, regulation, and other requirements make demands on how things can be structured. Since there is no one-size-fits-all solution to security, this section is meant as more of a walkthrough of options available within Intune rather than a comprehensive list of air-tight security measures. As always with security, consider your own threat model and how it applies to the resources available.\nSecurity Baselines\nConveniently, Microsoft created a way for administrators to change granular security settings that can be saved as templates called Security Baselines.\nTo access Security Baselines just go to Intune &gt; Endpoint security &gt; Security Baselines &gt; Security Baseline for Windows 10 and later &gt; Create policy. Most of the recommended defaults Microsoft gives us are pretty good so generally it is good enough to keep what is already in there but this would be the place to go for granular changes.\n\nName: Windows 11 Baseline\nDescription: Windows 11 Baseline\nConfiguration Settings: Keep Defaults\nAssignments: All-Employees and All-Windows-11\n\n\nOnce you save this baseline the security settings chosen in Configuration Settings will be enforced on all users and Windows 11 devices. If we wanted to tweak these settings later on we could come back and change the settings or possibly create a new baseline and assign it to a different group of users or devices.\nWe could also consider, for testing purposes, limiting the rollout of this Security Baseline to our IT pilot users similar to howe we did with the Update Rings. This way we could ensure the baseline works correctly for non-critical users before pushing it out to all users.\nDefender for Endpoint"},"index":{"title":"🏡 Home","links":["Intune-Lab/0.-Project-Introduction","Intune-Lab/1.-Setting-Up-The-Lab","Intune-Lab/2.-Enrolling-Devices","Intune-Lab/3.-Polishing-OOBE","Intune-Lab/4.-Installing-Apps","Intune-Lab/5.-Creating-Update-Rings","Intune-Lab/6.-Securing-Devices"],"tags":[],"content":"BusbeeTech\nThis is where I document my Lab Setups and other How-To’s. Hopefully you find something here useful.\nCurrently I’m working on a Microsoft Intune lab to test deployment configurations of Windows 11 machines. Its fun to see a newly setup VM be able to push through a standardized fresh install based on organizational requirements, all just by the user entering their Microsoft Entra login credentials.\nIn theory, an IT team could then ship a brand new laptop straight to a newly hired remote employee and the employee could get themselves up and running within an hour with an automatic install.\n\nTable of Contents\nIntune Lab\n\n\n0. Project Introduction\n\n\n1. Setting Up The Lab\n\n\n2. Enrolling Devices\n\n\n3. Polishing OOBE\n\n\n4. Installing Apps\n\n\n5. Creating Update Rings\n\n\n6. Securing Devices\n\n"}}